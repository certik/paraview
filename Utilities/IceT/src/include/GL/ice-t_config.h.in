/* -*- c -*- *******************************************************/
/*
 * Copyright (C) 2003 Sandia Corporation
 * Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive
 * license for use of this work by or on behalf of the U.S. Government.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that this Notice and any statement
 * of authorship are reproduced on all copies.
 */

/* $Id: ice-t_config.h.in,v 1.6 2005/06/13 15:01:14 kmorel Exp $ */

#ifndef _ICET_CONFIG_H_
#define _ICET_CONFIG_H_

#ifndef WIN32
#cmakedefine WIN32
#endif

#cmakedefine ICET_BUILD_SHARED_LIBS

#ifdef WIN32
#include <windows.h>
#endif

#if defined(WIN32) && defined(ICET_BUILD_SHARED_LIBS)
#  ifdef icet_EXPORTS
#    define ICET_EXPORT __declspec( dllexport )
#  else
#    define ICET_EXPORT __declspec( dllimport )
#  endif
#  ifdef icet_strategies_EXPORTS
#    define ICET_STRATEGY_EXPORT __declspec( dllexport )
#  else
#    define ICET_STRATEGY_EXPORT __declspec( dllimport )
#  endif
#  ifdef icet_mpi_EXPORTS
#    define ICET_MPI_EXPORT __declspec( dllexport )
#  else
#    define ICET_MPI_EXPORT __declspec( dllimport )
#  endif
#else /* WIN32 && SHARED_LIBS */
#  define ICET_EXPORT
#  define ICET_STRATEGY_EXPORT
#  define ICET_MPI_EXPORT
#endif /* WIN32 && SHARED_LIBS */

#define ICET_MAJOR_VERSION      @ICET_MAJOR_VERSION@
#define ICET_MINOR_VERSION      @ICET_MINOR_VERSION@
#define ICET_PATCH_VERSION      @ICET_PATCH_VERSION@
#define ICET_VERSION            "@ICET_VERSION@"

#cmakedefine ICET_SIZEOF_CHAR           @ICET_SIZEOF_CHAR@
#cmakedefine ICET_SIZEOF_SHORT          @ICET_SIZEOF_SHORT@
#cmakedefine ICET_SIZEOF_INT            @ICET_SIZEOF_INT@
#cmakedefine ICET_SIZEOF_LONG           @ICET_SIZEOF_LONG@
#cmakedefine ICET_SIZEOF_LONG_LONG      @ICET_SIZEOF_LONG_LONG@
#cmakedefine ICET_SIZEOF___INT64        @ICET_SIZEOF___INT64@
#cmakedefine ICET_SIZEOF_FLOAT          @ICET_SIZEOF_FLOAT@
#cmakedefine ICET_SIZEOF_DOUBLE         @ICET_SIZEOF_DOUBLE@
#cmakedefine ICET_SIZEOF_VOID_P         @ICET_SIZEOF_VOID_P@

#if ICET_SIZEOF_INT == 4
typedef int IceTInt32;
typedef unsigned int IceTUnsignedInt32;
#elif ICET_SIZEOF_LONG == 4
typedef long IceTInt32;
typedef unsigned long IceTUnsignedInt32;
#elif ICET_SIZEOF_SHORT == 4
typedef short IceTInt32;
typedef unsigned short IceTUnsignedInt32;
#else
#error "No valid data type for 32 bit integers found."
#endif

#if ICET_SIZEOF_INT == 8
typedef int IceTInt64;
typedef unsigned int IceTUnsignedInt64;
#elif ICET_SIZEOF_LONG == 8
typedef long IceTInt64;
typedef unsigned long IceTUnsignedInt64;
#elif defined(ICET_SIZEOF_LONG_LONG) && (ICET_SIZEOF_LONG_LONG == 8)
typedef long long IceTInt64;
typedef unsigned long long IceTUnsignedInt64;
#elif defined(ICET_SIZEOF___INT64) && (ICET_SIZEOF___INT64 == 8)
typedef __int64 IceTInt64;
typedef unsigned __int64 IceTUnsignedInt64;
#else
#error "No valid data type for 64 bit integers found."
#endif

#if ICET_SIZEOF_VOID_P == 4
typedef IceTUnsignedInt32 IceTPointerArithmetic;
#elif ICET_SIZEOF_VOID_P == 8
typedef IceTUnsignedInt64 IceTPointerArithmetic;
#else
#error "Unexpected pointer size."
#endif

#endif /*_ICET_CONFIG_H_*/
